"""
Задача №111819. Рекламный щит

Для рекламы своей новой продукции в Китае одна компания решила разместить на небоскребе рекламный щит.
Щит состоит из лампочек, организованных в форме прямоугольной сетки из n строк и m столбцов.
В любой момент каждая из лампочек может быть либо включена, либо выключена.

Рекламное сообщение состоит из k иероглифов, которые будут показываться один за другим.
Для каждого иероглифа известно, какие лампочки должны быть включены при отображении этого иероглифа.
Остальные лампочки должны быть выключены.

Для управления рекламным щитом разрабатывается специальная система.
Система может включать и выключать лампочки целыми группами.
Все лампочки разбиваются на несколько групп так, что в каждом иероглифе лампочки из одной группы должны
быть либо все включены, либо все выключены.

Для оптимизации работы системы управления необходим разбить лампочки на минимальное возможное число таких групп.
Помогите сотрудникам рекламного отдела компании решить эту задачу.

Формат входного файла

В первой строке входного файла заданы числа k, n и m (1≤k,n,m≤100) - количество иероглифов в рекламном сообщении,
высота и ширина рекламного щита.

Далее, в kn строках идет описание иероглифов. Каждый из k иероглифов задается n строками по m символов в каждой.
Все эти строки состоят только из символов «*» и «.», «*» соответствует включенной лампочке, «.» - выключенной.

Формат выходного файла

Выведите минимальное число групп, на которое можно разбить лампочки.
"""
from collections import defaultdict
from typing import List


def find_minimum_groups(k: int, n: int, m: int, hieroglyphs: List[str]) -> int:
    lamp_groups = defaultdict(int)

    for row in range(n):
        for col in range(m):
            # Формируем ключ для группы лампочек на основе текущего столбца и всех иероглифов
            lamp_key = ''.join(hieroglyphs[glyph * n + row][col] for glyph in range(k))
            lamp_groups[lamp_key] += 1

    # Количество уникальных групп лампочек
    return len(lamp_groups)


def main() -> None:
    k, n, m = map(int, input().split())
    hieroglyphs = [input() for _ in range(k * n)]

    print(find_minimum_groups(k, n, m, hieroglyphs))


if __name__ == '__main__':
    main()
