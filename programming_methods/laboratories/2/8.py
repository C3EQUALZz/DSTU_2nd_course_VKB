"""
Задача №672. Провода

Дано N отрезков провода длиной L1, L2, ..., LN сантиметров.
Требуется с помощью разрезания получить из них K равных отрезков как можно большей длины, выражающейся целым числом сантиметров.
Если нельзя получить K отрезков длиной даже 1 см, вывести 0.

Ограничения: 1 <= N <= 10 000, 1 <= K <= 10 000, 100 <= Li <= 10 000 000, все числа целые.

Входные данные

В первой строке находятся числа N и К. В следующих N строках - L1, L2, ..., LN, по одному числу в строке.

Выходные данные

Вывести одно число - полученную длину отрезков.
"""
from typing import List


def max_segment_length(segments: List[int], required_segments: int) -> int:
    left, right = 1, 10_000_001  # Устанавливаем границы для бинарного поиска

    while left < right:
        mid = (left + right) // 2  # Проверяем среднюю длину
        total_segments = sum(length // mid for length in segments)  # Считаем, сколько отрезков можно получить

        if total_segments >= required_segments:  # Если можем получить достаточно отрезков
            left = mid + 1  # Увеличиваем минимальную длину
        else:
            right = mid  # Уменьшаем максимальную длину

    return left - 1  # Возвращаем максимальную длину отрезков


def main() -> None:
    n, k = map(int, input().split())  # Читаем количество отрезков и требуемое количество
    segments = [int(input()) for _ in range(n)]  # Читаем длины отрезков

    result = max_segment_length(segments, k)  # Вычисляем максимальную длину отрезков
    print(result)  # Выводим результат


if __name__ == "__main__":
    main()
