/*
Задача №2782. Следующий

Реализуйте структуру данных, которая поддерживает множество S целых чисел, с котором разрешается производить следующие операции:

add(i) — добавить в множество S число i (если он там уже есть, то множество не меняется);
next(i) — вывести минимальный элемент множества, не меньший i.
Если искомый элемент в структуре отсутствует, необходимо вывести -1.

Входные данные

Исходно множество S пусто.
Первая строка входного файла содержит n — количество операций (1≤n≤300000).
Следующие n строк содержат операции.
Каждая операция имеет вид либо «+ i», либо «? i». Операция «? i» задает запрос next(i).

Если операция «+ i» идет во входном файле в начале или после другой операции «+», то она задает операцию add(i).
Если же она идет после запроса «?», и результат этого запроса был y, то выполняется операция add((i+y)mod10^9).

Во всех запросах и операциях добавления параметры лежат в интервале от 0 до 10^9.

Выходные данные

Для каждого запроса выведите одно число — ответ на запрос.
*/


#include <iostream>
#include <set>

class SortedList {
private:
    std::set<int> s;
    int lastQuery;

public:
    SortedList() : lastQuery(-1) {}

    void add(int x) {
        if (lastQuery != -1) {
            x = (x + lastQuery) % 1000000000;
        }
        s.insert(x);
        lastQuery = -1;
    }

    int next(int x) {
        auto it = s.lower_bound(x); // Находим первый элемент, не меньший x
        if (it != s.end()) {
            lastQuery = *it;
            return lastQuery;
        } else {
            lastQuery = -1;
            return -1;
        }
    }
};

int main() {
    int n;
    std::cin >> n;
    SortedList sortedList;

    for (int i = 0; i < n; ++i) {
        char operation;
        int x;
        std::cin >> operation >> x;
        if (operation == '+') {
            sortedList.add(x);
        } else if (operation == '?') {
            std::cout << sortedList.next(x) << std::endl;
        }
    }

    return 0;
}
