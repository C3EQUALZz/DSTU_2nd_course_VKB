; ФИО., группа 2._
; Лабораторная работа №5 вариант 10
; Задание: Ввести с клавиатуры строку, содержащую несколько точек.
; Преобразовать строку, чтобы после каждой точки был пробел, и следующая
; буква после точки были заглавная. Вывести результаты на экран.

data segment										; директива начала сегмента данных
	text1 db 0dh, 0ah, 'Input text:', 0dh, 0ah, '$'		; Подсказка ввода текста
	text2 db 0dh, 0ah, 'Result:', 0dh, 0ah, '$'			; строка "Результат:"
	in_str db 250,?,250 dup (?) 						; буфер ввода с клавиатуры 
	; 250 - максимальная длина строки, ? - фактическая длина строки, 250 dup (?) - введённая строка
	out_str db 250,?, 250 dup (?), 0dh, 0ah, '$'		; буфер вывода
	set_space db 0   									; флаг пробела
	set_big db 0     									; флаг заглавной буквы
data ends											; директива конца сегмента данных
 
code segment				; директива начала сегмента кодов
	assume ds:data, cs:code		; установка соответствий сегментов и их адресов 
								; cs - указывает на код программы, ds - на данные
	start:  				; метка входа
		mov ax, data
        mov ds, ax				; Загрузить сегментный адрес данных
        lea dx, text1			; Заносим подсказку для ввода
		mov ah, 09h				; Записываем номер команды для вывода
		int 21h					; Отображаем текст
	; Ввод строки
		lea dx, in_str			; Заносим начало строки
		mov ah, 0ah				; Записываем номер команды для вывода
		int 21h					; Считываем строку
    ; Обработка    
		xor ax, ax 				; обнуление AX
        lea bx, in_str + 2		; адрес начала введённой строки ; +2 потому что мы пропускаем "250,?" из начала in_str
        xor cx, cx				; обнуление СX
        mov cl, in_str + 1     	; Количество введённых символов ; +1 потому что мы пропускаем "250" из начала in_str
        lea si, out_str+2  		; si = адрес начала вывода      ; +2 потому что мы пропускаем "250,?" из начала out_str
		mov set_big, 0			; Флаг заглавной буквы
		mov set_space, 0		; Флаг пробела
	beg:   					; метка начала
		mov al, [bx]			; Заносим элемент массива в Аккумулятор
		mov [si], al			; Заносим символ в строку вывода
        cmp al, '.'				; Проверка на то, является ли символ точкой
        jnz ne_tochka			; Если не является, то переходим на метку
	da_tochka:				; метка для программиста(символ является точкой)
		mov set_space,1			; Нам нужен пробел
		mov set_big,1 			; Нам нужна заглавная буква
		jmp konec				; переход к метке
	ne_tochka:				; метка если символ не является точкой
		cmp al, byte ptr ' '	; Является ли символ пробелом?
		jnz ne_probel			; Если не является, то переходим на метку
	da_probel:				; метка для программиста(символ является пробелом)
		mov set_space,0 		; Нам не нужен пробел
		jmp konec				; переход к метке
	ne_probel: 				; метка, если символ не является пробелом
		cmp set_space,0 		; Нам нужен пробел?
		jz bukva				; Если нет, то переходим к метке
		push ax					; Запоминаем значение
		mov [si], ' '	        ; Делаем пробел в строке вывода
		pop ax					; Восстанавливаем значение
		inc si					; Переходим к следующему символу строки вывода
		mov [si], al			; Заносим символ в строку вывода
		mov set_space,0			; Сбрасываем флаг пробела
	bukva:					; метка буквы
		cmp set_big,0			; Нам не нужна заглавная буква?
		jz konec				; Если не нужна, то переходим к метке
		cmp al, 'a' 			; если символ меньше чем a - пропускаем
		jb konec
		cmp al, 'z' 			; если символ больше чем z - пропускаем
		ja konec
		xor byte ptr [bx], 20h 	; инвертируем 5-ый бит 
		; потому что в ASCII-коде заглавные и строчные буквы отличаются 5-ым битом
		mov al, [bx]			
		mov [si], al			; Заносим символ в строку вывода
		mov set_big,0			; Сбрасываем флаг заглавной буквы
	konec: 					; метка конца 						
		inc si					; Переход к следующему элементу вывода
        inc bx					; Переходим к следующему элементу ввода
        loop beg				; Повторяем, пока не кончится строка
        mov byte ptr[si], '$'	; 
        
	; Вывод строки
		lea dx, text2			; Заносим строку "Результат:"
		mov ah, 09h				; Записываем номер команды для вывода
		int 21h					; Отображаем текст
			
		lea dx, out_str+2			; Заносим строку вывода
		mov ah, 09h 			; функция вывода на экран
		int 21h					; Отображаем текст
	quit:   				; метка выхода
		mov ax, 4C00h 			; Код завершения 0
		int 21h 				; Выход в DOS
        
code ends					; директива конца сегмента кода
end start					; начать выполнение кода