; В программе работает счётчик, циклически меняющий значения в диапазоне 1..6.
; При нажатии любой клавиши текущее содержимое счетчика показывается в
; определенном месте экрана в виде ASCII-символа, код которого соответствует
; значению счетчика. При нажатии клавиши "Цифра 0", программа завершается.
; Факт нажатия клавиши отслеживается в обработчике прерывания от таймера 1Ch.

	.186
	assume	cs:code, ds:data, ss:stk

; Сегмент команд программы
code	segment	para public use16 "code"
main	proc
	; Настроить сегментный регистр DS на сегмент данных
	mov	ax, data	; Установить регистр сегмента данных DS,
	mov	ds, ax		; указывающим на сегмент data

	; ********** Основная часть программы **********

	; Вывести начальное сообщение
	mov	ah, 09h
	mov	dx, offset StartMsg
	int	21h

	; Считать текущие параметры экрана
	call	GetTextScreenPrm

	; Сохранить адрес предыдущего обработчика прерывания 1Ch
	mov	ah, 35h		; Функция DOS: получить адрес обработчика
	mov	al, 1Ch		; Вектор преывания, адрес обработчика которого получаем
	int	21h
	mov	word ptr cs:Old_Int1Ch, bx	; Сохранить смещение
	mov	word ptr cs:Old_Int1Ch+2, es	; Сохранить сегмент
	; Установить собственный обработчик прерывания 1Ch
	mov	ah, 25h		; Функция DOS: установить адрес обработчика
	mov	al, 1Ch		; Вектор преывания, адрес обработчика которого устанавливаем
	mov	dx, offset Int1Ch_Handler	; Смещение обработчика
	push	ds
	push	cs
	pop	ds				; Сегмент обработчика
	int	21h
	pop	ds

	; Цикл изменения значений циклического счетчика
@11:	inc	CounterVal
	cmp	CounterVal, 6
	jbe	@12
	mov	CounterVal, 1	; Зацикливание счетчика: 6+1 = 1
@12:	cmp	KeypressFlag, 1	; Проверка флага нажатия на клавишу
	jne	@13
	mov	al, CounterVal	; На клавишу нажали - вывод символа на экран
	call	OutSymb
	mov	KeypressFlag, 0	; Сбросить счетчик нажатия на клавишу
@13:	cmp	ExitFlag, 1	; Проверка флага завершения работы
	jne     @11

	; Восстановить предыдущий обработчик прерывания 1Ch
	mov	ah, 25h		; Функция DOS: установить адрес обработчика
	mov	al, 1Ch		; Вектор преывания, адрес обработчика которого устанавливаем
	push	ds
	mov	dx, word ptr cs:Old_Int1Ch	; Восстановить смещение
	push	word ptr cs:Old_Int1Ch+2	; Восстановить сегмент
	pop	ds
	int	21h
	pop	ds

	; ********** Завершение работы программы **********
@31:	mov	ax, 4C00h       ; Выход из
	int	21h             ; программы
main	endp

; Получает параметры текущего текстового режима экрана
GetTextScreenPrm proc
	; Сохранить регистры
	push	ax
	push	bx

	; Выполнить считывание информации
	mov	ah, 0Fh		; Получить параметры видеорежима
	int	10h		; на выходе в BH - номер активной видеостраницы
	mov	ScrActPgNum, bh

	; Восстановить регистры
	pop	bx
	pop	ax

	ret
GetTextScreenPrm endp

; Выводит указанный символ на текущую страницу экрана в текущую позицию курсора
; Вход:  AL - ASCII-код символа
OutSymb	proc
	; Сохранить регистры
	push	ax
	push	bx
	push	cx
	; Выполнить вывод символа в текущую позицию курсора
	mov	ah, 0Ah
	mov	bh, ScrActPgNum ; на видеостраницу BH
	;mov	al, al		; в AL указать код символа
	mov	cx, 1		; количество повторо символа
	int	10h
	; Восстановить регистры
	pop	cx
	pop	bx
	pop	ax

	ret
OutSymb	endp

; Обработчик прерывания 1Ch
Int1Ch_Handler	proc
	; Вызвать предыдущий обработчик прерываний - цепочку обработчиков
	pushf
	call	dword ptr cs:[Old_Int1Ch]
	; Сохранить регистры
	pusha
	push	ds
	; Отключить прерывания от таймера (чтобы не было повторной входимости)
	cli			; Запретить все прерывания
	in	al, 21h		; Прочитать текущую маску контроллера прерываний Master
	or	al, 00000001b	; Устанавливаем 0-й бит, отвечающий за IRQ0-таймер
				;  - тем самым запрещаем прерывания от него
	out	21h, al		; Записываем маску в контроллер - таймер запрещен
	sti			; Разрешить все прерывания
	; Выполнить проверку нажатия клавиши
	mov	ax, data	; В DS записать адрес сегмента данных для
	mov	ds, ax          ; доступа к переменным программы
	mov	ah, 01h		; Проверить, нажата ли клавиша
	int	16h
	jz	@IH1		; Если ZF-0, то клавиша нажата
	mov	ah, 00h		; Если клавиша нажата, то считать код клавиши
	int	16h
	mov	KeypressFlag, 1	; Установить признак нажатия на любую клавишу
	cmp	al, '0'		; Если была нажата клавиша "0",
	jne	@IH1
	mov	ExitFlag, 1	; то установить флаг завершения работы
@IH1:	; Включить прерывания от таймера (чтобы таймер снова работал)
	cli			; Запретить все прерывания
	in	al, 21h		; Прочитать текущую маску контроллера прерываний Master
	and	al, 11111110b	; Сбрасываем 0-й бит, отвечающий за IRQ0-таймер
				; - тем самым разрешаем прерывания от него
	out	21h, al		; Записываем маску в контроллер - таймер разрешен
	sti			; Разрешить все прерывания

	; Восстановить регистры
	pop	ds
	popa

	iret

; Поля данных обработчика в сегменте команд
Old_Int1Ch	dd	?	; Адрес предыдущего обработчика прерывания 1Ch
Int1Ch_Handler	endp

code	ends

; Сегмент данных программы
data	segment	para public use16 "data"
; Стартовое текстовое сообщение
StartMsg	db	'Текущее значение счетчика: ', '$'
; Текущие параметры экрана
ScrActPgNum	db	0	; Номер активной видеостраницы
; Текущее значение счетчика (1..6)
CounterVal	db	0
; Признак нажатия клавиши (необходимости вывести текущее значение счетчика)
; 0-нет; 1-да
KeypressFlag	db	0
; Признак необходимости завершить программу (нажали клавишу "0")
; 0-нет; 1-да
ExitFlag	db	0

data	ends

; Сегмент стека программы
stk	segment stack	use16
	db	256 dup (0)
stk	ends

end	main		; Конец программы с точкой входа main


